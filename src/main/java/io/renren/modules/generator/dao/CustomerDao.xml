<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.generator.dao.CustomerDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.generator.entity.CustomerEntity" id="customerMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="mobile" column="mobile"/>
        <result property="address" column="address"/>
        <result property="business" column="business"/>
        <result property="email" column="email"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.generator.entity.CustomerEntity">
		select * from tb_customer where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.generator.entity.CustomerEntity">
		select * from tb_customer
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_customer 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.generator.entity.CustomerEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_customer
		(
			`name`, 
			`mobile`, 
			`address`, 
			`business`, 
			`email`
		)
		values
		(
			#{name}, 
			#{mobile}, 
			#{address}, 
			#{business}, 
			#{email}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.generator.entity.CustomerEntity">
		update tb_customer 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="business != null">`business` = #{business}, </if>
			<if test="email != null">`email` = #{email}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tb_customer where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_customer where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>