<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.generator.dao.ProductDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.generator.entity.ProductEntity" id="productMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="describe" column="describe"/>
        <result property="unit" column="unit"/>
        <result property="price" column="price"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.generator.entity.ProductEntity">
		select * from tb_product where id = #{value}
	</select>

	<select id="queryProductList" resultType="io.renren.modules.generator.entity.ProductEntity">
		select * from tb_product
	</select>

	<select id="queryList" resultType="io.renren.modules.generator.entity.ProductEntity">
		select * from tb_product
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_product 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.generator.entity.ProductEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_product
		(
			`name`, 
			`describe`, 
			`unit`, 
			`price`
		)
		values
		(
			#{name}, 
			#{describe}, 
			#{unit}, 
			#{price}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.generator.entity.ProductEntity">
		update tb_product 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="describe != null">`describe` = #{describe}, </if>
			<if test="unit != null">`unit` = #{unit}, </if>
			<if test="price != null">`price` = #{price}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tb_product where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_product where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>