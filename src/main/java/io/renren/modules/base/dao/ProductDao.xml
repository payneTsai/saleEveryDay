<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.base.dao.ProductDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.base.entity.ProductEntity" id="productMap">
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="productDescribe" column="product_describe"/>
        <result property="productUnit" column="product_unit"/>
        <result property="productPrice" column="product_price"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.base.entity.ProductEntity">
		select * from product where product_id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.base.entity.ProductEntity">
		select * from product
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by product_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from product 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.base.entity.ProductEntity" useGeneratedKeys="true" keyProperty="productId">
		insert into product
		(
			`product_name`, 
			`product_describe`, 
			`product_unit`, 
			`product_price`
		)
		values
		(
			#{productName}, 
			#{productDescribe}, 
			#{productUnit}, 
			#{productPrice}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.base.entity.ProductEntity">
		update product 
		<set>
			<if test="productName != null">`product_name` = #{productName}, </if>
			<if test="productDescribe != null">`product_describe` = #{productDescribe}, </if>
			<if test="productUnit != null">`product_unit` = #{productUnit}, </if>
			<if test="productPrice != null">`product_price` = #{productPrice}</if>
		</set>
		where product_id = #{productId}
	</update>
	
	<delete id="delete">
		delete from product where product_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from product where product_id in 
		<foreach item="productId" collection="array" open="(" separator="," close=")">
			#{productId}
		</foreach>
	</delete>

</mapper>