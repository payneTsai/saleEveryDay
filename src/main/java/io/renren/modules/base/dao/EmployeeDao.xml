<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.base.dao.EmployeeDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.base.entity.EmployeeEntity" id="employeeMap">
        <result property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="empPassword" column="emp_password"/>
        <result property="empEmail" column="emp_email"/>
        <result property="empMoblie" column="emp_moblie"/>
        <result property="lastLogin" column="last_login"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.base.entity.EmployeeEntity">
		select * from employee where emp_id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.base.entity.EmployeeEntity">
		select * from employee
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by emp_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from employee 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.base.entity.EmployeeEntity" useGeneratedKeys="true" keyProperty="empId">
		insert into employee
		(
			`emp_name`, 
			`emp_password`, 
			`emp_email`, 
			`emp_moblie`, 
			`last_login`, 
			`gmt_create`, 
			`gmt_modified`
		)
		values
		(
			#{empName}, 
			#{empPassword}, 
			#{empEmail}, 
			#{empMoblie}, 
			#{lastLogin}, 
			#{gmtCreate}, 
			#{gmtModified}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.base.entity.EmployeeEntity">
		update employee 
		<set>
			<if test="empName != null">`emp_name` = #{empName}, </if>
			<if test="empPassword != null">`emp_password` = #{empPassword}, </if>
			<if test="empEmail != null">`emp_email` = #{empEmail}, </if>
			<if test="empMoblie != null">`emp_moblie` = #{empMoblie}, </if>
			<if test="lastLogin != null">`last_login` = #{lastLogin}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where emp_id = #{empId}
	</update>
	
	<delete id="delete">
		delete from employee where emp_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from employee where emp_id in 
		<foreach item="empId" collection="array" open="(" separator="," close=")">
			#{empId}
		</foreach>
	</delete>

</mapper>